/**
 * Клас, що надає функціонал для перевірки паліндромів.
 * <p>
 * Метод {@code isPalindrome} перевіряє, чи є заданий рядок паліндромом.
 * Для перевірки рядок конвертується до нижнього регістру та очищується від символів,
 * що не є буквами або цифрами.
 * </p>
 * 
 * @author Teslenko Pavlo
 */
public class Exercise {

    /**
     * Перевіряє, чи є вхідний рядок паліндромом.
     *
     * @param word рядок для перевірки; якщо {@code null} або порожній, повертається {@code false}
     * @return {@code true}, якщо рядок є паліндромом, інакше {@code false}
     */
    public static boolean isPalindrome(String word) {
        // Перевірка на null або порожній рядок, щоб уникнути помилок при обробці
        if (word == null || word.isEmpty()) {
            return false;
        }

        // Виклик приватного методу для очищення рядка:
        // - Перетворює всі символи до нижнього регістру
        // - Видаляє всі символи, окрім букв та цифр
        String cleanWord = cleanString(word);

        // Ініціалізація двох індексів: один для початку, інший для кінця очищеного рядка
        int left = 0;
        int right = cleanWord.length() - 1;

        // Порівнюємо символи зліва і справа поки не зустрінемо центральний символ
        while (left < right) {
            // Якщо символи не співпадають, рядок не є паліндромом
            if (cleanWord.charAt(left) != cleanWord.charAt(right)) {
                return false;
            }
            // Рухаємося до центру: збільшуємо лівий індекс і зменшуємо правий індекс
            left++;
            right--;
        }

        // Якщо всі відповідні символи співпали, рядок є паліндромом
        return true;
    }

    /**
     * Очищає вхідний рядок: конвертує до нижнього регістру та видаляє всі символи, окрім букв і цифр.
     *
     * @param input вхідний рядок
     * @return очищений рядок, готовий для перевірки на паліндром
     */
    private static String cleanString(String input) {
        // Метод toLowerCase() перетворює всі символи до нижнього регістру
        // replaceAll() використовує регулярний вираз для видалення небажаних символів:
        // Залишаються лише символи [a-zA-Z0-9а-яіїєґ]
        return input.toLowerCase().replaceAll("[^a-zA-Z0-9а-яіїєґ]", "");
    }
}
